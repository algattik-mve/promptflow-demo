name: Test Prompts with Promptflow
# modeled on https://github.com/Azure/llmops-gha-demo/blob/e87bec55c8ba3468e5d20668b712117b2ba17f7b/.github/workflows/deploy-pf-online-endpoint-pipeline.yml

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/ci-evaluation
  pull_request:
    branches:
      - main

permissions:
      id-token: write
      contents: read

env: 
  OPENAI_KEY: ${{ secrets.OPENAI_KEY }} 
  OPENAI_ENDPOINT: ${{ vars.OPENAI_ENDPOINT }}
  AISEARCH_KEY: ${{ secrets.AISEARCH_KEY }} 
  AISEARCH_ENDPOINT: ${{ vars.AISEARCH_ENDPOINT }} 
  AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
  AZURE_ML_WORKSPACE: ${{ vars.AZURE_ML_WORKSPACE }}
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

jobs:
  run-promptflow:
    runs-on: ubuntu-latest 
    defaults:
      run:
        working-directory: chat-with-patents
    steps:
    - name: "check setting OPENAI_KEY"
      if: ${{ env.OPENAI_KEY == '' }}
      run: echo 'the secret "OPENAI_KEY" has not been set'; false
    - name: "check setting OPENAI_ENDPOINT"
      if: ${{ env.OPENAI_ENDPOINT == '' }}
      run: echo 'the variable "OPENAI_ENDPOINT" has not been set'; false
    - name: "check setting AISEARCH_KEY"
      if: ${{ env.AISEARCH_KEY == '' }}
      run: echo 'the secret "AISEARCH_KEY" has not been set'; false
    - name: "check setting AISEARCH_ENDPOINT"
      if: ${{ env.AISEARCH_ENDPOINT == '' }}
      run: echo 'the variable "AISEARCH_ENDPOINT" has not been set'; false
    - name: "check setting AZURE_RESOURCE_GROUP"
      if: ${{ env.AZURE_RESOURCE_GROUP == '' }}
      run: echo 'the variable "AZURE_RESOURCE_GROUP" has not been set'; false
    - name: "check setting AZURE_ML_WORKSPACE"
      if: ${{ env.AZURE_ML_WORKSPACE == '' }}
      run: echo 'the variable "AZURE_ML_WORKSPACE" has not been set'; false
    - name: Check out repo
      uses: actions/checkout@v2
    - name: "check settings"
      run: |
        set -u
        for i in \
          OPENAI_KEY \
          OPENAI_ENDPOINT \
          AISEARCH_KEY \
          AISEARCH_ENDPOINT \
          AZURE_RESOURCE_GROUP \
          AZURE_ML_WORKSPACE \
          AZURE_CLIENT_ID \
          AZURE_TENANT_ID \
          AZURE_SUBSCRIPTION_ID \
          ; do echo "Checking \$$i is set..."; printenv $i > /dev/null
        done
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.4'
    - name: Install promptflow
      run: pip install -r requirements.txt
    - name: Install local keyring
      run: pip install keyrings.alt
    - name: Configure promptflow connections
      run: |
        pf connection create --file ../connections/azure_openai.yaml --name open_ai_connection --set api_key=${{ env.OPENAI_KEY }} api_base=${{ env.OPENAI_ENDPOINT }}
        pf connection create --file ../connections/azure_ai_search.yaml --name ai_search_connection --set api_key=${{ env.AISEARCH_KEY }} api_base=${{ env.AISEARCH_ENDPOINT }}
    - name: Test promptflow run
      run: pf flow test --flow .
    - name: Test promptflow run
      run: pf run create --file batch_run.yaml --name ag1
    - name: Test promptflow run
      run: pf run create --file ../rag-evaluation-flow/evaluation_run.yaml --run ag1 --name ag2 
    - name: Test promptflow run
      run: pf run visualize --name ag2 

  register-model-in-azureml:
    needs: run-promptflow
    runs-on: ubuntu-latest 
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Install az ml extension
      run: az extension add -n ml -y
    - name: Azure login
      id: azlogin
      uses: azure/login@v1
      with:
        client-id: ${{ env.AZURE_CLIENT_ID }}
        tenant-id: ${{ env.AZURE_TENANT_ID }}
        subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
    - name: Set Azure CLI defaults
      run: az configure --defaults group=${{env.AZURE_RESOURCE_GROUP}} workspace=${{env.AZURE_ML_WORKSPACE}}
    - name: Register promptflow model
      run: az ml model create --file chat-with-patents/deployment/model.yaml
